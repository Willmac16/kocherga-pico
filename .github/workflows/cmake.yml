name: CMake

on:
  workflow_dispatch:
  push:
  pull_request:

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout kocherga-pico
      uses: actions/checkout@v4

    - name: Checkout sdk
      uses: actions/checkout@v4
      with:
        repository: raspberrypi/pico-sdk.git
        path: sdk/pico-sdk
        ref: master

    - name: Checkout ardu
      uses: actions/checkout@v4
      with:
        repository: 107-systems/107-Arduino-Cyphal.git
        path: lib/107-Arduino-Cyphal
        ref: main

    - name: Checkout can
      uses: actions/checkout@v4
      with:
        repository: KevinOConnor/can2040.git
        path: lib/can2040
        ref: master

    - name: Checkout canard
      uses: actions/checkout@v4
      with:
        repository: OpenCyphal/libcanard.git
        path: lib/libcanard
        ref: master

    - name: Checkout koch
      uses: actions/checkout@v4
      with:
        repository: Zubax/kocherga.git
        path: lib/kocherga
        ref: master

    - name: Checkout o1
      uses: actions/checkout@v4
      with:
        repository: pavel-kirienko/o1heap.git
        path: lib/o1heap
        ref: master

    - name: Install arm-none-eabi-gcc
      uses: carlosperate/arm-none-eabi-gcc-action@v1.6.1

    # - name: Setup Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.9'
    #     cache: 'pip' # caching pip dependencies

    # - name: Install Nunavut
    #   run: pip install -U nunavut==2.0.9

    # - name: Transpile DSDL Files
    #   run: sh generate_headers.sh
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
